// <auto-generated />
using System;
using EstacioneJa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstacioneJa.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230814134301_MigracaoUsuario2")]
    partial class MigracaoUsuario2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstacioneJa.Models.OcupacaoVaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicial")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OcupacaoVagas");
                });

            modelBuilder.Entity("EstacioneJa.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emissor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receptor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("EstacioneJa.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Vaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("EstacioneJa.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Preferencia")
                        .HasColumnType("bit");

                    b.Property<byte[]>("SenhaHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SenhaSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = 12345678912L,
                            Email = "seuEmail@gmail.com",
                            Nome = "UsuarioAdmin",
                            Preferencia = false,
                            SenhaHash = new byte[] { 39, 98, 183, 74, 87, 6, 128, 178, 22, 112, 17, 41, 78, 156, 159, 64, 225, 28, 141, 215, 227, 164, 121, 221, 197, 123, 33, 12, 143, 114, 108, 197, 134, 215, 63, 95, 175, 151, 90, 81, 161, 142, 205, 48, 52, 113, 230, 222, 40, 119, 55, 227, 72, 69, 86, 117, 15, 168, 189, 154, 66, 61, 222, 102 },
                            SenhaSalt = new byte[] { 156, 25, 12, 198, 129, 252, 68, 70, 49, 120, 197, 181, 212, 155, 246, 89, 44, 51, 85, 91, 43, 160, 178, 47, 80, 167, 190, 244, 27, 112, 94, 113, 6, 27, 46, 195, 192, 128, 118, 107, 19, 24, 238, 135, 22, 108, 64, 176, 202, 133, 29, 138, 16, 30, 213, 180, 104, 106, 159, 94, 201, 132, 162, 122, 152, 234, 146, 77, 89, 175, 168, 59, 172, 156, 17, 87, 198, 193, 75, 165, 22, 97, 188, 191, 183, 6, 197, 203, 39, 159, 222, 81, 185, 240, 14, 13, 79, 3, 231, 146, 114, 155, 194, 114, 239, 15, 172, 194, 187, 231, 154, 195, 253, 199, 55, 79, 160, 36, 12, 196, 129, 12, 137, 48, 236, 226, 21, 15 },
                            TipoUsuario = 1
                        });
                });

            modelBuilder.Entity("EstacioneJa.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Andar")
                        .HasColumnType("int");

                    b.Property<int>("Coordenada")
                        .HasColumnType("int");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("bit");

                    b.Property<int?>("IdSensorId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Preferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSensorId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("EstacioneJa.Models.Vaga", b =>
                {
                    b.HasOne("EstacioneJa.Models.Sensor", "IdSensor")
                        .WithMany()
                        .HasForeignKey("IdSensorId");

                    b.Navigation("IdSensor");
                });
#pragma warning restore 612, 618
        }
    }
}
